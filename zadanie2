def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)


def check_winner(board):

    for row in board:
        if row[0] == row[1] == row[2] != " ":
            return row[0]


    for col in range(3):
        if board[0][col] == board[1][col] == board[2][col] != " ":
            return board[0][col]


    if board[0][0] == board[1][1] == board[2][2] != " ":
        return board[0][0]
    if board[0][2] == board[1][1] == board[2][0] != " ":
        return board[0][2]

    return None


def is_board_full(board):
    return all(cell != " " for row in board for cell in row)


def play_game():
    board = [[" " for _ in range(3)] for _ in range(3)]
    current_player = "X"
    scores = {"X": 0, "0": 0}

    while True:
        print_board(board)
        move = int(input(f"Игрок {current_player}, введите номер клетки (1-9): ")) - 1
        row, col = divmod(move, 3)

        if board[row][col] == " ":
            board[row][col] = current_player
        else:
            print("Эта клетка уже занята. Попробуйте еще раз.")
            continue

        winner = check_winner(board)
        if winner:
            print_board(board)
            print(f"Игрок {winner} победил!")
            scores[winner] += 1
            print(f"Счет: X - {scores['X']}, y - {scores['y']}")
            if input("Хотите сыграть снова? (да/нет): ").lower() != 'да':
                break
            else:
                board = [[" " for _ in range(3)] for _ in range(3)]
                current_player = "X"
                continue

        if is_board_full(board):
            print_board(board)
            print("Игра завершилась ничьей!")
            if input("Хотите сыграть снова? (да/нет): ").lower() != 'да':
                break
            else:
                board = [[" " for _ in range(3)] for _ in range(3)]
                current_player = "X"
                continue

        current_player = "0" if current_player == "X" else "X"


if __name__ == "__main__":
    play_game()
